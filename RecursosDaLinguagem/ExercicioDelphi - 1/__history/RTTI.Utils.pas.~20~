unit RTTI.Utils;

interface

uses
  System.Rtti, Vcl.StdCtrls, System.Classes, Vcl.Dialogs;

type

  TRttiUtils = class
    private
    public
      class procedure AttachEventOnTEdit ( aEdit: TEdit; OnChange : TNotifyEvent; OnExit : TNotifyEvent );
  end;

implementation

{ TRttiUtils }

class procedure TRttiUtils.AttachEventOnTEdit( aEdit: TEdit; OnChange : TNotifyEvent; OnExit : TNotifyEvent );
var
  _Context : TRttiContext;
  _Type : TRttiType;
  _Field : TRttiField;
//  _Attr : TCustomAttribute;
begin
  _Context := TRttiContext.Create;
  try
    _Type :=_Context.GetType(aEdit.ClassType);
    for _Field in _Type.GetFields do
    begin
//      for _Attr in _Field.GetAttributes do
//      begin
        ShowMessage(_Field.ToString);
//      end;
    end;
  finally
    _Context.Free;
  end;
end;

end.
