unit classOperators;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs;

type
  TForm1 = class(TForm)
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

  TRecordItem = record
    Total: Integer;
    class operator Add(aValue: Integer): TRecordItem;
  end;

  TRecord = record
    FTotal : Currency;
    class operator Add(aValueA, aValueB: TRecord): TRecord;
    class operator Implicit(aValue: Integer): TRecord;
    class operator Implicit(aValue: TRecordItem): TRecord;
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.FormCreate(Sender: TObject);
var
  vTotalA, vTotalB, vTotalC : TRecord;
  vTotal : TRecordItem;
begin
  vTotalA := 10;
  vTotalB := 10;

  vTotalC := vTotalA + vTotalB;

  vTotal := 100;


  ShowMessage(CurrToStr(vTotalC.FTotal));
end;

{ TRecord }

class operator TRecord.Add(aValueA, aValueB: TRecord): TRecord;
begin
  Result.FTotal := aValueA.FTotal + aValueB.FTotal;
end;

class operator TRecord.Implicit(aValue: Integer): TRecord;
begin
 Result.FTotal := aValue;
end;

class operator TRecord.Implicit(aValue: TRecordItem): TRecord;
begin
  Result.FTotal := Result.FTotal + aValue.Total;
end;

{ TRecordItem }

class operator TRecordItem.Add(aValue: Integer): TRecordItem;
begin
  Result.Total := aValue;
end;

end.
