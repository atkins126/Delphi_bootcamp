unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ComCtrls;

type
  TForm1 = class(TForm)
    ProgressBar1: TProgressBar;
    Button1: TButton;
    Memo1: TMemo;
    Button2: TButton;
    Memo2: TMemo;
    procedure FormCreate(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure validarCampo(Sender : TObject);
    procedure LoadProgress ( aValue : Integer );
    procedure LoadMemo ( aValue : Integer );

    procedure LoadMemoFunc ( aValue : array of String );
  end;

var
  Form1: TForm1;

implementation

uses
  View.Loading;

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
var
  vLoading: TLoading;
begin
  vLoading := TLoading.Create;
  try
    vLoading.OnLoadingProgressBar := LoadProgress;
    vLoading.OnLoadingMemo := LoadMemo;
    vLoading.OnLoadingMemoFunc := LoadMemoFunc;
    vLoading.fazIsso(
      procedure (aValue : Integer);
      begin
        ShowMessage(IntToStr(aValue));
      end);
    vLoading.Preencher;
    vLoading.Exec;
  finally
    vLoading.Free;
  end;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  Button2.OnExit := validarCampo;
  ReportMemoryLeaksOnShutdown := True;
end;

procedure TForm1.LoadMemo( aValue : Integer );
begin
  Memo1.Lines.Add(IntToStr(aValue));
end;

procedure TForm1.LoadMemoFunc( aValue : array of String );
var
  msg: String;
begin
  if Length(aValue)>0 then
    SetString(msg, PChar(@aValue[0]), Length(aValue))
  else
    msg := '';
  Memo2.Lines.Add(msg);
end;

procedure TForm1.LoadProgress(aValue: Integer);
begin
  ProgressBar1.Min := 0;
  ProgressBar1.Max := 100;
  ProgressBar1.Position := aValue;
end;

procedure TForm1.validarCampo(Sender : TObject);
begin
  ShowMessage('Campo válido.');
end;

end.
